openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HEIJAONARISON/TD-PROG3/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HEIJAONARISON/TD1-PROG3/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://HEIJAONARISON/TD1-PROG3/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://TD1-PROG3/1.0.0
info:
  version: "1.0.0"
  title: Student-management
paths:
  /groups:
    get:
      summary: Retrieve a list of groups
      parameters:
        - name: groupeName
          in: query
          description: Filter groups by name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of groups retrieved successfully
    post:
      summary: Add a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: group created successfully
    put:
      summary: Update an existing group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Group updated successfully
    delete:
      summary: Delete a group by ID
      parameters:
        - name: groupName
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Group deleted successfully
  /students:
    get:
      summary: Retrieve a list of students
      parameters:
        - name: name
          in: query
          description: Filter students by name
          schema:
            type: string
      responses:
        '200':
          description: List of students retrieved successfully

    post:
      summary: Add a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Students created successfully
    put:
      summary: Update an existing student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
    delete:
      summary: Delete an Student by reference
      parameters:
        - name: reference
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Student deleted successfully
  /students/group:
    get:
      summary: Retrieve students in the same group
      parameters:
        - name: groupName
          in: query
          description: Filter students by group name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of students in the specified group retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '404':
          description: Group not found
components:
  schemas:
    Group:
      type: object
      properties:
        groupName:
          type: string
        year:
          type: integer
        promotion:
          type: string
          enum:
            - G
            - H
            - J
            - K
        totalStudentNumber:
          type: integer
        student:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    Student:
      type: object
      properties:
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
        birthdate:
          type: string
        reference:
          type: string
        group:
          items:
            $ref: '#/components/schemas/Group'