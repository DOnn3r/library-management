openapi: 3.1.0
info:
  title: Library Management API
  description: API specification for managing books and authors in a library.
  version: 1.0.0-oas3.1
paths:
  /books:
    get:
      summary: Retrieve a list of books
      parameters:
      - name: bookName
        in: query
        description: Filter books by name
        required: false
        schema:
          type: string
      - name: releaseDate
        in: query
        description: Filter books by a release date range
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: List of books retrieved successfully
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                bookName:
                  type: string
                author:
                  type: string
                pageNumbers:
                  type: integer
                topic:
                  type: string
                  enum:
                  - ROMANCE
                  - COMEDY
                  - OTHER
                releaseDate:
                  type: string
                  format: date
              required:
              - bookName
              - author
      responses:
        "201":
          description: Book created successfully
    put:
      summary: Update an existing book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                bookName:
                  type: string
                author:
                  type: string
                pageNumbers:
                  type: integer
                topic:
                  type: string
                  enum:
                  - ROMANCE
                  - COMEDY
                  - OTHER
                releaseDate:
                  type: string
                  format: date
              required:
              - bookName
              - author
      responses:
        "200":
          description: Book updated successfully
    delete:
      summary: Delete a book by ID
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Book deleted successfully
  /authors:
    get:
      summary: Retrieve a list of authors
      parameters:
      - name: authorName
        in: query
        description: Filter authors by name
        required: false
        schema:
          type: string
      responses:
        "200":
          description: List of authors retrieved successfully
    post:
      summary: Add a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                sex:
                  type: string
                  enum:
                  - M
                  - F
              required:
              - name
              - sex
      responses:
        "201":
          description: Author created successfully
    put:
      summary: Update an existing author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                sex:
                  type: string
                  enum:
                  - M
                  - F
              required:
              - name
              - sex
      responses:
        "200":
          description: Author updated successfully
    delete:
      summary: Delete an author by ID
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Author deleted successfully
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
          - ROMANCE
          - COMEDY
          - OTHER
        releaseDate:
          type: string
          format: date
      required:
      - bookName
      - author
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
          - M
          - F
      required:
      - name
      - sex
